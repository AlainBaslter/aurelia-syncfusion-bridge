{"version":3,"sources":["common/decorators.js"],"names":[],"mappings":";;;;;;;;AAAQ,sB,sBAAA,gB;AAAkB,0B,sBAAA,oB;;AAClB,e,+BAAA,S;;AACA,c,oBAAA,Q;;AACA,e,qBAAA,S;;AACA,U,SAAA,I;;;AAED,eAAS,iBAAT,CAA2B,WAA3B,EAAwC,MAAxC,EAAgD,gBAAhD,EAAkE,gBAAlE,EAAoF;AACzF,eAAO,UAAS,MAAT,EAAiB,GAAjB,EAAsB,UAAtB,EAAkC;AACvC,cAAI,mBAAmB,SAAS,cAAT,CAAwB,SAAS,QAAjC,EAA2C,oBAA3C,EAAiE,MAAjE,CAAvB;AACA,cAAI,YAAa,UAAU,QAAV,IAAsB,IAAI,SAAJ,EAAvC;AACA,cAAI,OAAO,UAAU,GAAV,CAAc,IAAd,CAAX;AACA,iBAAO,IAAP,CAAY,SAAZ;AACA,cAAI,MAAM,OAAO,MAAjB;AACA,iBAAO,SAAP,CAAiB,WAAjB,GAA+B,WAA/B;AACA,iBAAO,SAAP,CAAiB,OAAjB,GAA2B,mBAAmB,gBAAnB,GAAsC,EAAjE;AACA,iBAAO,SAAP,CAAiB,gBAAjB,GAAoC,mBAAmB,gBAAnB,GAAsC,EAA1E;AACA,cAAI,GAAJ,EAAS;AACP,mBAAO,SAAP,CAAiB,iBAAjB,GAAqC,MAArC;AACA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,GAApB,EAAyB,GAAzB,EAA8B;AAC5B,kBAAI,SAAS,OAAO,CAAP,CAAb;AACA,kBAAI,oBAAoB,UAAU,gBAAlC,EAAoD;AAClD,yBAAS,iBAAiB,MAAjB,CAAT;AACD;AACD,kBAAI,uBAAuB;AACzB,sBAAM,KAAK,uBAAL,CAA6B,MAA7B;AADmB,eAA3B;AAGA,kBAAI,OAAO,IAAI,gBAAJ,CAAqB,oBAArB,CAAX;AACA,mBAAK,YAAL,CAAkB,MAAlB,EAA0B,gBAA1B,EAA4C,UAA5C;AACD;AACF;AACF,SAvBD;AAwBD;;;;AAEM,eAAS,OAAT,GAAmB;AACxB,eAAO,UAAS,MAAT,EAAiB,GAAjB,EAAsB,UAAtB,EAAkC;AACvC,cAAI,YAAY,CAAC,UAAU,QAAV,IAAsB,IAAI,SAAJ,EAAvB,EAAwC,GAAxC,CAA4C,SAA5C,CAAhB;AACA,cAAI,MAAM,WAAW,KAArB;;AAEA,qBAAW,KAAX,GAAmB,YAAkB;AAAA;;AAAA,8CAAN,IAAM;AAAN,kBAAM;AAAA;;AACnC,gBAAI,KAAK,iBAAT,EAA4B;AAC1B,wBAAU,SAAV,CAAoB;AAAA,uBAAM,IAAI,KAAJ,QAAgB,IAAhB,CAAN;AAAA,eAApB;AACD,aAFD,MAEM;AACJ,kBAAI,KAAJ,CAAU,IAAV,EAAgB,IAAhB;AACD;AACF,WAND;;AAQA,iBAAO,UAAP;AACD,SAbD;AAcD","file":"common/decorators.js","sourceRoot":"/source/","sourcesContent":["import {BindableProperty, HtmlBehaviorResource} from 'aurelia-templating';\r\nimport {Container} from 'aurelia-dependency-injection';\r\nimport {metadata} from 'aurelia-metadata';\r\nimport {TaskQueue} from 'aurelia-task-queue';\r\nimport {Util} from './util';\r\n\r\nexport function generateBindables(controlName, inputs, twoWayProperties, abbrevProperties) {\r\n  return function(target, key, descriptor) {\r\n    let behaviorResource = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, target);\r\n    let container = (Container.instance || new Container());\r\n    let util = container.get(Util);\r\n    inputs.push('options');\r\n    let len = inputs.length;\r\n    target.prototype.controlName = controlName;\r\n    target.prototype.twoWays = twoWayProperties ? twoWayProperties : [];\r\n    target.prototype.abbrevProperties = abbrevProperties ? abbrevProperties : [];\r\n    if (len) {\r\n      target.prototype.controlProperties = inputs;\r\n      for (let i = 0; i < len; i++) {\r\n        let option = inputs[i];\r\n        if (abbrevProperties && option in abbrevProperties) {\r\n          option = abbrevProperties[option];\r\n        }\r\n        let nameOrConfigOrTarget = {\r\n          name: util.getBindablePropertyName(option)\r\n        };\r\n        let prop = new BindableProperty(nameOrConfigOrTarget);\r\n        prop.registerWith(target, behaviorResource, descriptor);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport function delayed() {\r\n  return function(target, key, descriptor) {\r\n    let taskQueue = (Container.instance || new Container()).get(TaskQueue);\r\n    let ptr = descriptor.value;\r\n\r\n    descriptor.value = function(...args) {\r\n      if (this.childPropertyName) {\r\n        taskQueue.queueTask(() => ptr.apply(this, args));\r\n      }else {\r\n        ptr.apply(this, args);\r\n      }\r\n    };\r\n\r\n    return descriptor;\r\n  };\r\n}\r\n"]}