{"version":3,"sources":["grid/column.js"],"names":[],"mappings":";;;iFAYa,MAAM;;;;;;;;;;uCAZX,UAAU;0CAAE,aAAa;qCAAE,QAAQ;sCAAE,SAAS;8CAAE,iBAAiB;iCAAE,IAAI;;;AAYlE,kBAAM;;;yBAAN,MAAM;;;;;;AAAN,sBAAM,WAEf,IAAI,GAAA,gBAAG;AACH,wBAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;AAClB,4BAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AACtB,4BAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;qBAC9E;iBACJ;;sCAPQ,MAAM;;iCACd,QAAQ,CAAI,SAAS,CAAC,aAAa,cAAW;;;;;8BADtC,MAAM;AAAN,sBAAM,GARlB,iBAAiB,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,gBAAgB,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAC7G,qBAAqB,EAAE,UAAU,EAAE,UAAU,EAAE,kBAAkB,EACjE,YAAY,EAAE,cAAc,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,YAAY,EAAE,cAAc,EACpG,UAAU,EAAE,OAAO,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,QAAQ,EAAE,kBAAkB,EACvF,YAAY,EAAE,iBAAiB,EAAE,UAAU,EAAE,YAAY,EAAE,cAAc,EAAE,WAAW,EACtF,UAAU,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EACpE,iBAAiB,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,CAE9B,MAAM,KAAN,MAAM;AAAN,sBAAM,GATlB,aAAa,CAAI,SAAS,CAAC,aAAa,YAAS,CASrC,MAAM,KAAN,MAAM;AAAN,sBAAM,GAVlB,UAAU,CAAC,0CAA0C,CAAC,CAU1C,MAAM,KAAN,MAAM;uBAAN,MAAM","file":"grid/column.js","sourceRoot":"/source/","sourcesContent":["import {inlineView, customElement, children, constants, generateBindables, Util} from '../common/common';\r\n\r\n@inlineView('<template><content></content></template>')\r\n@customElement(`${constants.elementPrefix}column`)\r\n@generateBindables('columns', ['allowEditing', 'allowFiltering', 'allowGrouping', 'allowSorting', 'allowResizing',\r\n    'showInColumnChooser', 'commands', 'cssClass', 'customAttributes',\r\n    'dataSource', 'defaultValue', 'disableHtmlEncode', 'displayAsCheckBox', 'editParams', 'editTemplate',\r\n    'editType', 'field', 'foreignKeyField', 'foreignKeyValue', 'format', 'headerTemplateID',\r\n    'headerText', 'headerTextAlign', 'isFrozen', 'isIdentity', 'isPrimaryKey', 'isUnbound',\r\n    'template', 'templateID', 'textAlign', 'tooltip', 'clipMode', 'type',\r\n    'validationRules', 'visible', 'width'])\r\n\r\nexport class Column {\r\n    @children(`${constants.elementPrefix}template`) template\r\n    bind() {\r\n        if (this.template[0]) {\r\n            let util = new Util();\r\n            this[util.getBindablePropertyName('template')] = this.template[0].template;\r\n        }\r\n    }\r\n}"]}